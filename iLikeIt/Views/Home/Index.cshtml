@if (false) { <script src="../../Scripts/jquery-1.7.2-vsdoc.js" type="text/javascript"></script>}

<div class="container">
    <!-- VGTODO Change it into the other direction and update href -->        
    <h1>iLikeIt!</h1>
    <p>iLikeIt! is a simple, proof of concept, image voting system</p>
    <a href="https://github.com/vgheri/iLikeIt">
        <img style="position: absolute; top: 0; right: 0; border: 0;" src="http://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub" />
    </a>
    <div class="row">
        <div class="span8 offset2">
            <div id="myCarousel" class="carousel slide">             
            <div class="carousel-inner">
                <div class="active item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img01.jpg" alt="First image" /></div> 
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img02.jpg" alt="Second image" /></div>
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img03.jpg" alt="Third image" /></div>
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img04.jpg" alt="Fourth image" /></div>
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img05.jpg" alt="Fifth image" /></div>
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img06.jpg" alt="Sixth image" /></div>
                <div class="item"><img src="http://dl.dropbox.com/u/6326953/iLikeIt/img07.jpg" alt="Seventh image" /></div>
            </div>             
            <a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a>            
            <a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a>            
            <div class="center carousel-vote">
                <span class="carousel-vote-title">Vote</span>
                <span class="star-text"></span>
                <div class="star-container">
                    <div class="vote-item"><img id="1" class="star" src="@Url.Content("~/Content/images/empty_star.png")" alt="1" /></div>
                    <div class="vote-item"><img id="2" class="star" src="@Url.Content("~/Content/images/empty_star.png")" alt="2" /></div>
                    <div class="vote-item"><img id="3" class="star" src="@Url.Content("~/Content/images/empty_star.png")" alt="3" /></div>
                    <div class="vote-item"><img id="4" class="star" src="@Url.Content("~/Content/images/empty_star.png")" alt="4" /></div>
                    <div class="vote-item"><img id="5" class="star" src="@Url.Content("~/Content/images/empty_star.png")" alt="5" /></div>
                </div>
                
            </div>
            </div>
         </div>
     </div>
</div> <!-- /container -->

<!-- Le javascript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="@Url.Content("~/Scripts/jquery-1.7.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/knockout-2.1.0.js")" type="text/javascript"></script>
<script type="text/javascript">
    
    //This prototype is provided by the Mozilla foundation and
    //is distributed under the MIT license.
    //http://www.ibiblio.org/pub/Linux/LICENSES/mit.license
    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function (elt /*, from*/) {
            var len = this.length;

            var from = Number(arguments[1]) || 0;
            from = (from < 0)
         ? Math.ceil(from)
         : Math.floor(from);
            if (from < 0)
                from += len;

            for (; from < len; from++) {
                if (from in this &&
          this[from] === elt)
                    return from;
            }
            return -1;
        };
    }

    /*
     * Returns the version of Internet Explorer or a -1 (indicating the use of another browser)
     */
    function getInternetExplorerVersion() {
        var rv = -1; // Return value assumes failure.
        if (navigator.appName == 'Microsoft Internet Explorer') {
            var ua = navigator.userAgent;
            var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
            if (re.exec(ua) != null)
            rv = parseFloat(RegExp.$1);
        }
        return rv;
    }

    /* 
    * Get a text representation of the vote cast by the user
    */
    function getStarShortTextDescription(starId) {
        var description;
        switch (starId) {
            case "1":
                description = "Awful";
                break;
            case "2":
                description = "Nothing special";
                break;
            case "3":
                description = "Not bad";
                break;
            case "4":
                description = "Nice";
                break;
            case "5":
                description = "I like it!";
                break;
            default:
                description = "Unknown rate";                
                break;
        }
        return description;
    }

    /*
     * Show the user its rating by coloring (mouse over) or uncoloring (mouse out) the stars
     */
    function displayRating(selectedId, mouseIn) {
        var activeImage = $(".active img");
        if (activeImage.data("vote") === null || activeImage.data("vote") === undefined) {
            var divs = $(".star-container div").slice(0, parseInt(selectedId)).each(function (item) {
                if (mouseIn) {
                    $(this).find("img").attr("src", '@Url.Content("~/Content/images/full_star.png")');                    
                }
                else {
                    $(this).find("img").attr("src", '@Url.Content("~/Content/images/empty_star.png")');                    
                }
            });
            if (mouseIn) {
                $(".star-text").text(getStarShortTextDescription(selectedId));
            }
            else {
                $(".star-text").text("");
            }
        }
    }

    /*
     * Reset the vote panel
     */
    function resetStarContainer() {
        var divs = $(".star-container div").slice(0, 5).each(function (item) {
            $(this).find("img").attr("src", '@Url.Content("~/Content/images/empty_star.png")');
        });
        $(".carousel-vote-title").text("Vote");
        $(".star-text").text("");
    }

    /* 
     * Preload the vote panel with the vote already cast by the user, if any.
     */
    function preloadRating() {
        var activeImage = $(".active img");
        var vote = activeImage.data("vote");
        resetStarContainer();
        if (vote != null && vote != undefined) {
            var divs = $(".star-container div").slice(0, parseInt(vote)).each(function (item) {
                $(this).find("img").attr("src", '@Url.Content("~/Content/images/full_star.png")');
            });
            $(".carousel-vote-title").text("Average rating");
            $(".star-text").text(getStarShortTextDescription(vote));
        }        
        return true;
    }

    /* 
     *  Register the vote cast by the user submitting it to the server.
     *  On success, we display the average rating.
     *  On error, we display an alert to the user and reset the vote panel
     */
    function registerVote(star) {
        var votedImage = $(".active img");
        // If the user didn't vote yet, then we can register the vote
        if (votedImage.data("vote") === null || votedImage.data("vote") === undefined) {
            $(".carousel-vote-title").text("Submitting your vote...");
            $.ajax({
                type: 'POST',
                url: 'Home/RegisterVote',
                data: '{"imageName":"' + votedImage.src + '", "star":"' + star.attr("id") + '"}',
                contentType: "application/json; charset=utf-8",
                success: function (msg) {
                    votedImage.data("vote", msg);
                    preloadRating();
                },
                error: function () {
                    alert("Ooops, an error has occurred. Please try again and if the problem persists... well it's just a proof of concept app, what did you expect?");
                    resetStarContainer();
                    return false;
                }
            });
        }
    }

    $(function () {        
        $('#myCarousel').carousel({
            interval: false,
            pause: "hover"
        });
        $("#myCarousel").carousel('pause');
                
        $(".carousel-vote").on("mouseenter", function () {
            preloadRating();
        });

        $(".vote-item").on("mouseover", "img", function () {
            var elem = $(this);
            displayRating(elem.attr("id"), true);
        });

        $(".vote-item").on("mouseout", "img", function () {
            var elem = $(this);
            displayRating(elem.attr("id"), false);
        });

        $(".vote-item").on("click", "img", function () {
            var elem = $(this);
            registerVote(elem);
        });
    });

</script>
